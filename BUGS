SBEXR PARSING
=============

- scanner should skip some files, like .swp files from vim.

- in typedef, the target type should be linked to its definition.

- weird types should link back to their definition.

- add metadata in the file indicating how it was rendered. Eg, full indexing,
  or partial.

- // WHEN CLICKING ON A LINK, if points with the same page,
  // IF POINTS WITHIN THE SAME WINDOW, do not change scrolling.
  // Rather, just highlight the target.

- when passed the --scan=false flag, root directory entry is not generated, although
  it probably exists in memory (it has a hash!)

- names in all-symbols.json... don't have namespace identifier. They should!
  namespace is important.

- pinctrl-palmas.c:354, problem:
  - There is a macro that defines a list of elements, like:
    # define ELEMENTS \
        DECLARE_ELEMENT(foo) \
        DECLARE_ELEMENT(bar)

    And in different places, we have things like:

    
    enum {
    # undef DECLARE_ELEMENT
    # define DECLARE_ELEMENT(value) EnumConstant##value
    };

    End result: all those symbols, eg, EnumConstantfoo, EnumConstantbar,
    have exactly the same source line/column and expansion line/column


in global-symbols database:

- all entries that have no name that I manually verified were
  prototype definitions, eg, things like:

    atoi(const char*);
         ^^^^^^^^^^^-> declaration has no name!!

  plan: in the database, provide not only the name, but the type of the
  declaration. and then the context.

  in this case:

     context: atoi(const char*)
     type: const char*
     name: ""

kernel handler:

==================
When there is something like:

struct sk_buff *skb, *tmp_skb;

struct sk_buff is surrounded by span and a twice, creating nested a links.

RENDERING - JAVSACRIPT / server
======================
- In firefox, clicking on the same link covers the text highlighted under the search bar,
  making the interface almost unusable!

- server could do a bit of a better job at redirecting to the right places without
  too much effort. Eg, when entering partial links manually.


