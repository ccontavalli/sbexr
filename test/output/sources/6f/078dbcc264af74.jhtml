{"name":"stdio.h","path":"/usr/include/stdio.h","root":"../06/416cc91f3e3d90.html","project":"test","tag":"output","parents":[{"name":"usr","href":"../60/7abc7e1c17ae25.html"},{"name":"include","href":"../19/901c5d9478e5ce.html"}]}
---
<span class='comment'>/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   &lt;http://www.gnu.org/licenses/&gt;.  */</span>

<span class='comment'>/*
 *	ISO C99 Standard: 7.19 Input/output	&lt;stdio.h&gt;
 */</span>

<span class='directive'>#ifndef <span class='macro-undefined'>_STDIO_H</span></span>
<span class='directive'>#define <span class='def def-MACRO' id='0001800900018012'>_STDIO_H	1</span></span>

<span class='directive'>#define <span class='def def-MACRO' id='0001a0090001a009'>__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION</span></span>
<span class='directive'>#include <a class='include' href='../e1/6f60ab16e47e49.html'>&lt;bits/libc-header-start.h&gt;</a></span>

<a class='MACRO-uses' href='../11/d2796f2851903a.html#0007200a00072023'>__BEGIN_DECLS</a>

<span class='directive'>#define <span class='def def-MACRO' id='0001f0090001f009'>__need_size_t</span></span>
<span class='directive'>#define <span class='def def-MACRO' id='0002000900020009'>__need_NULL</span></span>
<span class='directive'>#include <a class='include' href='../fd/abf26b4f65020a.html'>&lt;stddef.h&gt;</a></span>

<span class='directive'>#define <span class='def def-MACRO' id='0002300900023009'>__need___va_list</span></span>
<span class='directive'>#include <a class='include' href='../44/7afd378fb9bef7.html'>&lt;stdarg.h&gt;</a></span>

<span class='directive'>#include <a class='include' href='../41/e28fc1cdef774c.html'>&lt;bits/types.h&gt;</a></span>
<span class='directive'>#include <a class='include' href='../a3/5161b30e4c9c85.html'>&lt;bits/types/__fpos_t.h&gt;</a></span>
<span class='directive'>#include <a class='include' href='../fa/0a0d3d8e7cc07c.html'>&lt;bits/types/__fpos64_t.h&gt;</a></span>
<span class='directive'>#include <a class='include' href='../77/97ec9572248ea4.html'>&lt;bits/types/__FILE.h&gt;</a></span>
<span class='directive'>#include <a class='include' href='../00/eb21e8e066d2fe.html'>&lt;bits/types/FILE.h&gt;</a></span>
<span class='directive'>#include <a class='include' href='../91/8bbaed7fe58735.html'>&lt;bits/types/struct_FILE.h&gt;</a></span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='directive'># include <a class='include' href='../f9/72a0e406b846b3.html'>&lt;bits/types/cookie_io_functions_t.h&gt;</a></span>
<span class='directive'>#endif</span>

<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014a00a0014a016'>__USE_XOPEN</a> || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015200d0015201c'>__USE_XOPEN2K8</a></span>
<span class='directive'># ifdef __GNUC__</span>
<span class='directive'>#  ifndef <span class='macro-undefined'>_VA_LIST_DEFINED</span></span>
<span class='def def-Typedef' id='0003400100034018'><span class='keyword typedef'>typedef</span> __gnuc_va_list va_list</span>;
<span class='directive'>#   define <span class='def def-MACRO' id='0003500c0003500c'>_VA_LIST_DEFINED</span></span>
<span class='directive'>#  endif</span>
<span class='directive'># else</span><span class='preprocessor-if muted'>
<span class='directive'>#  include &lt;stdarg.h&gt;</span></span>
<span class='directive'># endif</span>
<span class='directive'>#endif</span>

<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014d00b0014d018'>__USE_UNIX98</a> || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015500c0015501a'>__USE_XOPEN2K</a></span>
<span class='directive'># ifndef <span class='macro-undefined'>__off_t_defined</span></span>
<span class='directive'># ifndef <span class='macro-undefined'>__USE_FILE_OFFSET64</span></span>
<span class='def def-Typedef' id='0003f0010003f011'><span class='keyword typedef'>typedef</span> <a class='typedef-uses' href='../41/e28fc1cdef774c.html#00088016000960190009600100096019'>__off_t</a> off_t</span>;
<span class='directive'># else</span><span class='preprocessor-if muted'>
<span class='keyword typedef'>typedef</span> __off64_t off_t;</span>
<span class='directive'># endif</span>
<span class='directive'># define <span class='def def-MACRO' id='0004300a0004300a'>__off_t_defined</span></span>
<span class='directive'># endif</span>
<span class='directive'># if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0016800a0016801c'>__USE_LARGEFILE64</a> &amp;&amp; !defined <span class='macro-undefined'>__off64_t_defined</span></span>
<span class='def def-Typedef' id='0004600100046013'><span class='keyword typedef'>typedef</span> <a class='typedef-uses' href='../41/e28fc1cdef774c.html#000880160009701b000970010009701b'>__off64_t</a> off64_t</span>;
<span class='directive'># define <span class='def def-MACRO' id='0004700a0004700a'>__off64_t_defined</span></span>
<span class='directive'># endif</span>
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015200d0015201c'>__USE_XOPEN2K8</a></span>
<span class='directive'># ifndef <span class='macro-undefined'>__ssize_t_defined</span></span>
<span class='def def-Typedef' id='0004d0010004d013'><span class='keyword typedef'>typedef</span> <a class='typedef-uses' href='../41/e28fc1cdef774c.html#00088016000bf01b000bf001000bf01b'>__ssize_t</a> ssize_t</span>;
<span class='directive'># define <span class='def def-MACRO' id='0004e00a0004e00a'>__ssize_t_defined</span></span>
<span class='directive'># endif</span>
<span class='directive'>#endif</span>

<span class='comment'>/* The type of the second argument to `fgetpos' and `fsetpos'.  */</span>
<span class='directive'>#ifndef <span class='macro-undefined'>__USE_FILE_OFFSET64</span></span>
<span class='def def-Typedef' id='0005400100054012'><span class='keyword typedef'>typedef</span> <a class='typedef-uses' href='../a3/5161b30e4c9c85.html#0000a0090000e001'>__fpos_t</a> fpos_t</span>;
<span class='directive'>#else</span><span class='preprocessor-if muted'>
<span class='keyword typedef'>typedef</span> __fpos64_t fpos_t;</span>
<span class='directive'>#endif</span>
<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0016800a0016801c'>__USE_LARGEFILE64</a></span>
<span class='def def-Typedef' id='0005900100059014'><span class='keyword typedef'>typedef</span> <a class='typedef-uses' href='../fa/0a0d3d8e7cc07c.html#0000a0090000e001'>__fpos64_t</a> fpos64_t</span>;
<span class='directive'>#endif</span>

<span class='comment'>/* The possibilities for the third argument to `setvbuf'.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0005d0090005d010'>_IOFBF 0</span>		/* Fully buffered.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0005e0090005e010'>_IOLBF 1</span>		/* Line buffered.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0005f0090005f010'>_IONBF 2</span>		/* No buffering.  */</span>


<span class='comment'>/* Default buffer size.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0006300900063010'>BUFSIZ 8192</span></span>


<span class='comment'>/* The value returned by fgetc and similar functions to indicate the
   end of the file.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0006800900068010'>EOF (-1)</span></span>


<span class='comment'>/* The possibilities for the third argument to `fseek'.
   These values should not be changed.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0006d0090006d012'>SEEK_SET	0</span>	/* Seek from beginning of file.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0006e0090006e012'>SEEK_CUR	1</span>	/* Seek from current position.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0006f0090006f012'>SEEK_END	2</span>	/* Seek from end of file.  */</span>
<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='directive'># define <span class='def def-MACRO' id='0007100a00071014'>SEEK_DATA	3</span>	/* Seek to next data.  */</span>
<span class='directive'># define <span class='def def-MACRO' id='0007200a00072014'>SEEK_HOLE	4</span>	/* Seek to next hole.  */</span>
<span class='directive'>#endif</span>


<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a> || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014a00a0014a016'>__USE_XOPEN</a></span>
<span class='comment'>/* Default path prefix for `tempnam' and `tmpnam'.  */</span>
<span class='directive'># define <span class='def def-MACRO' id='0007800a00078013'>P_tmpdir	"/tmp"</span></span>
<span class='directive'>#endif</span>


<span class='comment'>/* Get the values:
   L_tmpnam	How long an array of chars must be to be passed to `tmpnam'.
   TMP_MAX	The minimum number of unique filenames generated by tmpnam
		(and tempnam when it uses tmpnam's name space),
		or tempnam (the two are separate).
   L_ctermid	How long an array to pass to `ctermid'.
   L_cuserid	How long an array to pass to `cuserid'.
   FOPEN_MAX	Minimum number of files that can be open at once.
   FILENAME_MAX	Maximum length of a filename.  */</span>
<span class='directive'>#include <a class='include' href='../0c/a8a47b0c4f7800.html'>&lt;bits/stdio_lim.h&gt;</a></span>


<span class='comment'>/* Standard streams.  */</span>
<span class='decl decl-Var' id='000890010008900e'><span class='keyword extern'>extern</span> <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *stdin</span>;		<span class='comment'>/* Standard input stream.  */</span>
<span class='decl decl-Var' id='0008a0010008a00e'><span class='keyword extern'>extern</span> <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *stdout</span>;		<span class='comment'>/* Standard output stream.  */</span>
<span class='decl decl-Var' id='0008b0010008b00e'><span class='keyword extern'>extern</span> <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *stderr</span>;		<span class='comment'>/* Standard error output stream.  */</span>
<span class='comment'>/* C89/C99 say they're macros.  Make them happy.  */</span>
<span class='directive'>#define <span class='def def-MACRO' id='0008d0090008d00f'>stdin stdin</span></span>
<span class='directive'>#define <span class='def def-MACRO' id='0008e0090008e010'>stdout stdout</span></span>
<span class='directive'>#define <span class='def def-MACRO' id='0008f0090008f010'>stderr stderr</span></span>

<span class='comment'>/* Remove file FILENAME.  */</span>
<span class='decl decl-Function' id='000920010003d01b000920010009202c'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> remove (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__filename) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='comment'>/* Rename file OLD to NEW.  */</span>
<span class='decl decl-Function' id='000940010003d01b000940010009403a'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> rename (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__old, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__new) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017400a00174017'>__USE_ATFILE</a></span>
<span class='comment'>/* Rename file OLD relative to OLDFD to NEW relative to NEWFD.  */</span>
<span class='decl decl-Function' id='000980010003d01b000980010009901b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> renameat (<span class='keyword int'>int</span> __oldfd, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__old, <span class='keyword int'>int</span> __newfd,
		     <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__new) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='comment'>/* Flags for renameat2.  */</span>
<span class='directive'># define <span class='def def-MACRO' id='0009e00a0009e022'>RENAME_NOREPLACE (1 &lt;&lt; 0)</span></span>
<span class='directive'># define <span class='def def-MACRO' id='0009f00a0009f021'>RENAME_EXCHANGE (1 &lt;&lt; 1)</span></span>
<span class='directive'># define <span class='def def-MACRO' id='000a000a000a0021'>RENAME_WHITEOUT (1 &lt;&lt; 2)</span></span>

<span class='comment'>/* Rename file OLD relative to OLDFD to NEW relative to NEWFD, with
   additional flags.  */</span>
<span class='decl decl-Function' id='000a40010003d01b000a4001000a5032'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> renameat2 (<span class='keyword int'>int</span> __oldfd, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__old, <span class='keyword int'>int</span> __newfd,
		      <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__new, <span class='keyword unsigned'>unsigned</span> <span class='keyword int'>int</span> __flags) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='directive'>#endif</span>

<span class='comment'>/* Create a temporary file and open it read/write.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='directive'>#ifndef <span class='macro-undefined'>__USE_FILE_OFFSET64</span></span>
<span class='decl decl-Function' id='000ad001000ad01b'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>tmpfile (<span class='keyword void'>void</span>)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#else</span><span class='preprocessor-if muted'>
<span class='directive'># ifdef __REDIRECT</span>
<span class='keyword extern'>extern</span> FILE *__REDIRECT (tmpfile, (<span class='keyword void'>void</span>), tmpfile64) __wur;
<span class='directive'># else</span>
<span class='directive'>#  define tmpfile tmpfile64</span>
<span class='directive'># endif</span></span>
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0016800a0016801c'>__USE_LARGEFILE64</a></span>
<span class='decl decl-Function' id='000b7001000b701d'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>tmpfile64 (<span class='keyword void'>void</span>)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>

<span class='comment'>/* Generate a temporary filename.  */</span>
<span class='decl decl-Function' id='000bb0010003d01b000bb001000bb021'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *tmpnam (<span class='keyword char'>char</span> *__s) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* This is the reentrant variant of `tmpnam'.  The only difference is
   that it does not allow S to be NULL.  */</span>
<span class='decl decl-Function' id='000c00010003d01b000c0001000c0023'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *tmpnam_r (<span class='keyword char'>char</span> *__s) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>


<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a> || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014a00a0014a016'>__USE_XOPEN</a></span>
<span class='comment'>/* Generate a unique temporary filename using up to five characters of PFX
   if it is not NULL.  The directory to put this file in is searched for
   as follows: First the environment variable "TMPDIR" is checked.
   If it contains the name of a writable directory, that directory is used.
   If not and if DIR is not NULL, that value is checked.  If that fails,
   P_tmpdir is tried and finally "/tmp".  The storage for the filename
   is allocated by `malloc'.  */</span>
<span class='decl decl-Function' id='000cc001000d003a000cc001000cd00e'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *tempnam (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__dir, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__pfx)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a> <a class='MACRO-uses' href='../11/d2796f2851903a.html#000d000a000d003a'>__attribute_malloc__</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>


<span class='comment'>/* Close STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='000d5001000d5022'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fclose (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='comment'>/* Flush STREAM, or all streams if STREAM is NULL.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='000da001000da022'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fflush (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* Faster versions when locking is not required.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='000e3001000e302b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fflush_unlocked (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='comment'>/* Close all streams.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='000ed001000ed01b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fcloseall (<span class='keyword void'>void</span>)</span>;
<span class='directive'>#endif</span>


<span class='directive'>#ifndef <span class='macro-undefined'>__USE_FILE_OFFSET64</span></span>
<span class='comment'>/* Open a file and create a new stream for it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='000f6001000f7025'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>fopen (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __filename,
		    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __modes)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='comment'>/* Open a file, replacing an existing stream with it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='000fc001000fe022'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>freopen (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __filename,
		      <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __modes,
		      <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#else</span><span class='preprocessor-if muted'>
<span class='directive'># ifdef __REDIRECT</span>
<span class='keyword extern'>extern</span> FILE *__REDIRECT (fopen, (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __filename,
				 <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __modes), fopen64)
  __wur;
<span class='keyword extern'>extern</span> FILE *__REDIRECT (freopen, (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __filename,
				   <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __modes,
				   FILE *__restrict __stream), freopen64)
  __wur;
<span class='directive'># else</span>
<span class='directive'>#  define fopen fopen64</span>
<span class='directive'>#  define freopen freopen64</span>
<span class='directive'># endif</span></span>
<span class='directive'>#endif</span>
<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0016800a0016801c'>__USE_LARGEFILE64</a></span>
<span class='decl decl-Function' id='0010e0010010f027'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>fopen64 (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __filename,
		      <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __modes)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='decl decl-Function' id='001100010011201d'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>freopen64 (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __filename,
			<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __modes,
			<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>

<span class='directive'>#ifdef	<a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0012c00a0012c016'>__USE_POSIX</a></span>
<span class='comment'>/* Create a new stream that refers to an existing system file descriptor.  */</span>
<span class='decl decl-Function' id='001170010003d01b0011700100117035'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>fdopen (<span class='keyword int'>int</span> __fd, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__modes) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>

<span class='directive'>#ifdef	<a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='comment'>/* Create a new stream that refers to the given magic cookie,
   and uses the given functions for input and output.  */</span>
<span class='decl decl-Function' id='0011d0010003d01b0011d0010011f028'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>fopencookie (<span class='keyword void'>void</span> *__restrict __magic_cookie,
			  <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __modes,
			  <a class='declaration-uses' href='../f9/72a0e406b846b3.html#000370090003d001'>cookie_io_functions_t</a> __io_funcs) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>

<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015200d0015201c'>__USE_XOPEN2K8</a> || <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#000b0009000b0028'>__GLIBC_USE</a> (LIB_EXT2)</span>
<span class='comment'>/* Create a new stream that refers to a memory buffer.  */</span>
<span class='decl decl-Function' id='001240010003d01b0012400100125003'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>fmemopen (<span class='keyword void'>void</span> *__s, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __len, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__modes)
  <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='comment'>/* Open a stream that writes into a malloc'd buffer that is expanded as
   necessary.  *BUFLOC and *SIZELOC are updated with the buffer's location
   and the number of characters written on fflush or fclose.  */</span>
<span class='decl decl-Function' id='0012a0010003d01b0012a0010012a042'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>open_memstream (<span class='keyword char'>char</span> **__bufloc, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> *__sizeloc) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>


<span class='comment'>/* If BUF is NULL, make STREAM unbuffered.
   Else make it use buffer BUF, of size BUFSIZ.  */</span>
<span class='decl decl-Function' id='001300010003d01b0013000100130048'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> setbuf (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream, <span class='keyword char'>char</span> *__restrict __buf) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='comment'>/* Make STREAM use buffering mode MODE.
   If BUF is not NULL, use N bytes of it for buffering;
   else allocate an internal buffer N bytes long.  */</span>
<span class='decl decl-Function' id='001340010003d01b0013400100135020'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> setvbuf (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream, <span class='keyword char'>char</span> *__restrict __buf,
		    <span class='keyword int'>int</span> __modes, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __n) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;

<span class='directive'>#ifdef	<a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* If BUF is NULL, make STREAM unbuffered.
   Else make it use SIZE bytes of BUF for buffering.  */</span>
<span class='decl decl-Function' id='0013a0010003d01b0013a0010013b019'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> setbuffer (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream, <span class='keyword char'>char</span> *__restrict __buf,
		       <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __size) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;

<span class='comment'>/* Make STREAM line-buffered.  */</span>
<span class='decl decl-Function' id='0013e0010003d01b0013e0010013e029'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> setlinebuf (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='directive'>#endif</span>


<span class='comment'>/* Write formatted output to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001460010014702b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fprintf (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream,
		    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...)</span>;
<span class='comment'>/* Write formatted output to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0014c0010014c038'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> printf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...)</span>;
<span class='comment'>/* Write formatted output to S.  */</span>
<span class='decl decl-Function' id='0014e0010003e01d0014e0010014f02d'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> sprintf (<span class='keyword char'>char</span> *__restrict __s,
		    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a></span>;

<span class='comment'>/* Write formatted output to S from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001550010015601c'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vfprintf (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __s, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
		     __gnuc_va_list __arg)</span>;
<span class='comment'>/* Write formatted output to stdout from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0015b0010015b04a'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vprintf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, __gnuc_va_list __arg)</span>;
<span class='comment'>/* Write formatted output to S from argument list ARG.  */</span>
<span class='decl decl-Function' id='0015d0010003e01d0015d0010015e01e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vsprintf (<span class='keyword char'>char</span> *__restrict __s, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
		     __gnuc_va_list __arg) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a></span>;

<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015a00c0015a01a'>__USE_ISOC99</a> || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014d00b0014d018'>__USE_UNIX98</a></span>
<span class='comment'>/* Maximum chars of output to write in MAXLEN.  */</span>
<span class='decl decl-Function' id='001620010016403e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> snprintf (<span class='keyword char'>char</span> *__restrict __s, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __maxlen,
		     <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>3</span>, <span class='numeric'>4</span>)))</span>;

<span class='decl decl-Function' id='001660010016803e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vsnprintf (<span class='keyword char'>char</span> *__restrict __s, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __maxlen,
		      <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, __gnuc_va_list __arg)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>3</span>, <span class='numeric'>0</span>)))</span>;
<span class='directive'>#endif</span>

<span class='directive'>#if <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#000b0009000b0028'>__GLIBC_USE</a> (LIB_EXT2)</span>
<span class='comment'>/* Write formatted output to a string dynamically allocated with `malloc'.
   Store the address of the string in *PTR.  */</span>
<span class='decl decl-Function' id='0016e0010017003e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vasprintf (<span class='keyword char'>char</span> **__restrict __ptr, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __f,
		      __gnuc_va_list __arg)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>2</span>, <span class='numeric'>0</span>)))</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='decl decl-Function' id='001710010017303e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __asprintf (<span class='keyword char'>char</span> **__restrict __ptr,
		       <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __fmt, ...)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>2</span>, <span class='numeric'>3</span>)))</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='decl decl-Function' id='001740010017603e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> asprintf (<span class='keyword char'>char</span> **__restrict __ptr,
		     <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __fmt, ...)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>2</span>, <span class='numeric'>3</span>)))</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015200d0015201c'>__USE_XOPEN2K8</a></span>
<span class='comment'>/* Write formatted output to a file descriptor.  */</span>
<span class='decl decl-Function' id='0017b0010017d034'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vdprintf (<span class='keyword int'>int</span> __fd, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __fmt,
		     __gnuc_va_list __arg)
     <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>2</span>, <span class='numeric'>0</span>)))</span>;
<span class='decl decl-Function' id='0017e0010017f034'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> dprintf (<span class='keyword int'>int</span> __fd, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __fmt, ...)
     <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>2</span>, <span class='numeric'>3</span>)))</span>;
<span class='directive'>#endif</span>


<span class='comment'>/* Read formatted input from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001870010018802a'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fscanf (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream,
		   <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='comment'>/* Read formatted input from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0018d0010018d037'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> scanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='comment'>/* Read formatted input from S.  */</span>
<span class='decl decl-Function' id='0018f0010003d01b0018f0010019002c'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> sscanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s,
		   <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;

<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015a00c0015a01a'>__USE_ISOC99</a> &amp;&amp; !defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a> \
    &amp;&amp; (!defined <span class='macro-undefined'>__LDBL_COMPAT</span> || !defined <a class='MACRO-uses' href='../11/d2796f2851903a.html#000ae00a000ae04f'>__REDIRECT</a>) \
    &amp;&amp; (defined __STRICT_ANSI__ || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015500c0015501a'>__USE_XOPEN2K</a>)</span><span class='preprocessor-if muted'>
<span class='directive'># ifdef __REDIRECT</span>
<span class='comment'>/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */</span>
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT (fscanf, (FILE *__restrict __stream,
				<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...),
		       __isoc99_fscanf) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT (scanf, (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...),
		       __isoc99_scanf) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT_NTH (sscanf, (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s,
				    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...),
			   __isoc99_sscanf);
<span class='directive'># else</span>
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __isoc99_fscanf (FILE *__restrict __stream,
			    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __isoc99_scanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __isoc99_sscanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s,
			    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...) __THROW;
<span class='directive'>#  define fscanf __isoc99_fscanf</span>
<span class='directive'>#  define scanf __isoc99_scanf</span>
<span class='directive'>#  define sscanf __isoc99_sscanf</span>
<span class='directive'># endif</span></span>
<span class='directive'>#endif</span>

<span class='directive'>#ifdef	<a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015a00c0015a01a'>__USE_ISOC99</a></span>
<span class='comment'>/* Read formatted input from S into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001b2001001b4033'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vfscanf (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __s, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
		    __gnuc_va_list __arg)
     <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__scanf__, <span class='numeric'>2</span>, <span class='numeric'>0</span>)))</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='comment'>/* Read formatted input from stdin into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001ba001001bb033'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vscanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, __gnuc_va_list __arg)
     <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__scanf__, <span class='numeric'>1</span>, <span class='numeric'>0</span>)))</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='comment'>/* Read formatted input from S into argument list ARG.  */</span>
<span class='decl decl-Function' id='001be001001c003b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> vsscanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s,
		    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, __gnuc_va_list __arg)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__scanf__, <span class='numeric'>2</span>, <span class='numeric'>0</span>)))</span>;

<span class='directive'># if !defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a> \
     &amp;&amp; (!defined <span class='macro-undefined'>__LDBL_COMPAT</span> || !defined <a class='MACRO-uses' href='../11/d2796f2851903a.html#000ae00a000ae04f'>__REDIRECT</a>) \
     &amp;&amp; (defined __STRICT_ANSI__ || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015500c0015501a'>__USE_XOPEN2K</a>)</span><span class='preprocessor-if muted'>
<span class='directive'>#  ifdef __REDIRECT</span>
<span class='comment'>/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */</span>
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT (vfscanf,
		       (FILE *__restrict __s,
			<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, __gnuc_va_list __arg),
		       __isoc99_vfscanf)
     <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__scanf__, <span class='numeric'>2</span>, <span class='numeric'>0</span>))) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT (vscanf, (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
				__gnuc_va_list __arg), __isoc99_vscanf)
     <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__scanf__, <span class='numeric'>1</span>, <span class='numeric'>0</span>))) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT_NTH (vsscanf,
			   (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s,
			    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
			    __gnuc_va_list __arg), __isoc99_vsscanf)
     <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__scanf__, <span class='numeric'>2</span>, <span class='numeric'>0</span>)));
<span class='directive'>#  else</span>
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __isoc99_vfscanf (FILE *__restrict __s,
			     <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
			     __gnuc_va_list __arg) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __isoc99_vscanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
			    __gnuc_va_list __arg) __wur;
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __isoc99_vsscanf (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s,
			     <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
			     __gnuc_va_list __arg) __THROW;
<span class='directive'>#   define vfscanf __isoc99_vfscanf</span>
<span class='directive'>#   define vscanf __isoc99_vscanf</span>
<span class='directive'>#   define vsscanf __isoc99_vsscanf</span>
<span class='directive'>#  endif</span></span>
<span class='directive'># endif</span>
<span class='directive'>#endif /* Use ISO C9x.  */</span>


<span class='comment'>/* Read a character from STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001eb001001eb021'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fgetc (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='decl decl-Function' id='001ec001001ec020'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> getc (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;

<span class='comment'>/* Read a character from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001f2001001f2019'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> getchar (<span class='keyword void'>void</span>)</span>;

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0013800a0013801c'>__USE_POSIX199506</a></span>
<span class='comment'>/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='001f9001001f9029'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> getc_unlocked (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='decl decl-Function' id='001fa001001fa022'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> getchar_unlocked (<span class='keyword void'>void</span>)</span>;
<span class='directive'>#endif /* Use POSIX.  */</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='002040010020402a'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fgetc_unlocked (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='directive'>#endif /* Use MISC.  */</span>


<span class='comment'>/* Write a character to STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.

   These functions is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0020f0010020f02a'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fputc (<span class='keyword int'>int</span> __c, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='decl decl-Function' id='0021000100210029'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> putc (<span class='keyword int'>int</span> __c, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;

<span class='comment'>/* Write a character to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002160010021601c'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> putchar (<span class='keyword int'>int</span> __c)</span>;

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='0021f0010021f033'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fputc_unlocked (<span class='keyword int'>int</span> __c, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='directive'>#endif /* Use MISC.  */</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0013800a0013801c'>__USE_POSIX199506</a></span>
<span class='comment'>/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0022700100227032'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> putc_unlocked (<span class='keyword int'>int</span> __c, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='decl decl-Function' id='0022800100228025'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> putchar_unlocked (<span class='keyword int'>int</span> __c)</span>;
<span class='directive'>#endif /* Use POSIX.  */</span>


<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a> \
    || (defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014a00a0014a016'>__USE_XOPEN</a> &amp;&amp; !defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015500c0015501a'>__USE_XOPEN2K</a>)</span>
<span class='comment'>/* Get a word (int) from STREAM.  */</span>
<span class='decl decl-Function' id='0022f0010022f020'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> getw (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;

<span class='comment'>/* Write a word (int) to STREAM.  */</span>
<span class='decl decl-Function' id='0023200100232029'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> putw (<span class='keyword int'>int</span> __w, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='directive'>#endif</span>


<span class='comment'>/* Get a newline-terminated string of finite length from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0023a0010023a04d'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *fgets (<span class='keyword char'>char</span> *__restrict __s, <span class='keyword int'>int</span> __n, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span>
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='directive'>#if <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#000b0009000b0028'>__GLIBC_USE</a> (DEPRECATED_GETS)</span>
<span class='comment'>/* Get a newline-terminated string from stdin, removing the newline.

   This function is impossible to use safely.  It has been officially
   removed from ISO C11 and ISO C++14, and we have also removed it
   from the _GNU_SOURCE feature list.  It remains available when
   explicitly using an old ISO C, Unix, or POSIX standard.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='00247001000fb0420024700100247025'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *gets (<span class='keyword char'>char</span> *__s) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a> <a class='MACRO-uses' href='../11/d2796f2851903a.html#000fb00a000fb042'>__attribute_deprecated__</a></span>;
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='comment'>/* This function does the same as `fgets' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='0025100100252022'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *fgets_unlocked (<span class='keyword char'>char</span> *__restrict __s, <span class='keyword int'>int</span> __n,
			     <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>


<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015200d0015201c'>__USE_XOPEN2K8</a> || <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#000b0009000b0028'>__GLIBC_USE</a> (LIB_EXT2)</span>
<span class='comment'>/* Read up to (and including) a DELIMITER from STREAM into *LINEPTR
   (and null-terminate it). *LINEPTR is a pointer returned from malloc (or
   NULL), pointing to *N characters of space.  It is realloc'd as
   necessary.  Returns the number of characters read (not including the
   null terminator), or -1 on error or EOF.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='0026100100263037'><span class='keyword extern'>extern</span> <a class='return-uses' href='../41/e28fc1cdef774c.html#00088016000bf01b000bf001000bf01b'>__ssize_t</a> __getdelim (<span class='keyword char'>char</span> **__restrict __lineptr,
                             <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t *</a>__restrict __n, <span class='keyword int'>int</span> __delimiter,
                             <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='decl decl-Function' id='0026400100266035'><span class='keyword extern'>extern</span> <a class='return-uses' href='../41/e28fc1cdef774c.html#00088016000bf01b000bf001000bf01b'>__ssize_t</a> getdelim (<span class='keyword char'>char</span> **__restrict __lineptr,
                           <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t *</a>__restrict __n, <span class='keyword int'>int</span> __delimiter,
                           <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='comment'>/* Like `getdelim', but reads up to a newline.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='0026e00100270034'><span class='keyword extern'>extern</span> <a class='return-uses' href='../41/e28fc1cdef774c.html#00088016000bf01b000bf001000bf01b'>__ssize_t</a> getline (<span class='keyword char'>char</span> **__restrict __lineptr,
                          <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t *</a>__restrict __n,
                          <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>


<span class='comment'>/* Write a string to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0027800100278048'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fputs (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span>;

<span class='comment'>/* Write a string, followed by a newline, to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0027e0010027e021'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> puts (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__s)</span>;


<span class='comment'>/* Push a character back onto the input buffer of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002850010028502b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> ungetc (<span class='keyword int'>int</span> __c, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;


<span class='comment'>/* Read chunks of generic data from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0028c0010028d02d'><span class='keyword extern'>extern</span> <a class='return-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> fread (<span class='keyword void'>void</span> *__restrict __ptr, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __size,
		     <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __n, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='comment'>/* Write chunks of generic data to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0029200100293029'><span class='keyword extern'>extern</span> <a class='return-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> fwrite (<span class='keyword const'>const</span> <span class='keyword void'>void</span> *__restrict __ptr, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __size,
		      <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __n, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __s)</span>;

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='comment'>/* This function does the same as `fputs' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='0029c0010029d020'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fputs_unlocked (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __s,
			   <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span>;
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* Faster versions when locking is not necessary.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */</span>
<span class='decl decl-Function' id='002a7001002a802f'><span class='keyword extern'>extern</span> <a class='return-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> fread_unlocked (<span class='keyword void'>void</span> *__restrict __ptr, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __size,
			      <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __n, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='decl decl-Function' id='002a9001002aa030'><span class='keyword extern'>extern</span> <a class='return-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> fwrite_unlocked (<span class='keyword const'>const</span> <span class='keyword void'>void</span> *__restrict __ptr, <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __size,
			       <a class='declaration-uses' href='../fd/abf26b4f65020a.html#0003e0010003e017'>size_t</a> __n, <a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream)</span>;
<span class='directive'>#endif</span>


<span class='comment'>/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002b2001002b203f'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fseek (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream, <span class='keyword long'>long</span> <span class='keyword int'>int</span> __off, <span class='keyword int'>int</span> __whence)</span>;
<span class='comment'>/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002b7001002b7026'><span class='keyword extern'>extern</span> <span class='keyword long'>long</span> <span class='keyword int'>int</span> ftell (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='comment'>/* Rewind to the beginning of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002bc001002bc023'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> rewind (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;

<span class='comment'>/* The Single Unix Specification, Version 2, specifies an alternative,
   more adequate interface for the two functions above which deal with
   file offset.  `long int' is not the right type.  These definitions
   are originally defined in the Large File Support API.  */</span>

<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0016400a0016401a'>__USE_LARGEFILE</a> || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015500c0015501a'>__USE_XOPEN2K</a></span>
<span class='directive'># ifndef <span class='macro-undefined'>__USE_FILE_OFFSET64</span></span>
<span class='comment'>/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002c9001002c903f'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fseeko (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream, <a class='declaration-uses' href='../41/e28fc1cdef774c.html#00088016000960190009600100096019'>__off_t</a> __off, <span class='keyword int'>int</span> __whence)</span>;
<span class='comment'>/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002ce001002ce026'><span class='keyword extern'>extern</span> <a class='return-uses' href='../41/e28fc1cdef774c.html#00088016000960190009600100096019'>__off_t</a> ftello (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'># else</span><span class='preprocessor-if muted'>
<span class='directive'>#  ifdef __REDIRECT</span>
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT (fseeko,
		       (FILE *__stream, __off64_t __off, <span class='keyword int'>int</span> __whence),
		       fseeko64);
<span class='keyword extern'>extern</span> __off64_t __REDIRECT (ftello, (FILE *__stream), ftello64);
<span class='directive'>#  else</span>
<span class='directive'>#   define fseeko fseeko64</span>
<span class='directive'>#   define ftello ftello64</span>
<span class='directive'>#  endif</span></span>
<span class='directive'># endif</span>
<span class='directive'>#endif</span>

<span class='directive'>#ifndef <span class='macro-undefined'>__USE_FILE_OFFSET64</span></span>
<span class='comment'>/* Get STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002e1001002e1048'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fgetpos (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream, <a class='declaration-uses' href='../a3/5161b30e4c9c85.html#0000a0090000e001'>fpos_t *</a>__restrict __pos)</span>;
<span class='comment'>/* Set STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='002e6001002e6038'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fsetpos (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream, <span class='keyword const'>const</span> <a class='declaration-uses' href='../a3/5161b30e4c9c85.html#0000a0090000e001'>fpos_t</a> *__pos)</span>;
<span class='directive'>#else</span><span class='preprocessor-if muted'>
<span class='directive'># ifdef __REDIRECT</span>
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT (fgetpos, (FILE *__restrict __stream,
				 fpos_t *__restrict __pos), fgetpos64);
<span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __REDIRECT (fsetpos,
		       (FILE *__stream, <span class='keyword const'>const</span> fpos_t *__pos), fsetpos64);
<span class='directive'># else</span>
<span class='directive'>#  define fgetpos fgetpos64</span>
<span class='directive'>#  define fsetpos fsetpos64</span>
<span class='directive'># endif</span></span>
<span class='directive'>#endif</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0016800a0016801c'>__USE_LARGEFILE64</a></span>
<span class='decl decl-Function' id='002f4001002f4043'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fseeko64 (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream, <a class='declaration-uses' href='../41/e28fc1cdef774c.html#000880160009701b000970010009701b'>__off64_t</a> __off, <span class='keyword int'>int</span> __whence)</span>;
<span class='decl decl-Function' id='002f5001002f502a'><span class='keyword extern'>extern</span> <a class='return-uses' href='../41/e28fc1cdef774c.html#000880160009701b000970010009701b'>__off64_t</a> ftello64 (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='decl decl-Function' id='002f6001002f604c'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fgetpos64 (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>__restrict __stream, <a class='declaration-uses' href='../fa/0a0d3d8e7cc07c.html#0000a0090000e001'>fpos64_t *</a>__restrict __pos)</span>;
<span class='decl decl-Function' id='002f7001002f703c'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fsetpos64 (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream, <span class='keyword const'>const</span> <a class='declaration-uses' href='../fa/0a0d3d8e7cc07c.html#0000a0090000e001'>fpos64_t</a> *__pos)</span>;
<span class='directive'>#endif</span>

<span class='comment'>/* Clear the error and EOF indicators for STREAM.  */</span>
<span class='decl decl-Function' id='002fb0010003d01b002fb001002fb027'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> clearerr (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='comment'>/* Return the EOF indicator for STREAM.  */</span>
<span class='decl decl-Function' id='002fd0010003d01b002fd001002fd022'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> feof (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='comment'>/* Return the error indicator for STREAM.  */</span>
<span class='decl decl-Function' id='002ff0010003d01b002ff001002ff024'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> ferror (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* Faster versions when locking is not required.  */</span>
<span class='decl decl-Function' id='003030010003d01b0030300100303030'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> clearerr_unlocked (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='decl decl-Function' id='003040010003d01b003040010030402b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> feof_unlocked (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='decl decl-Function' id='003050010003d01b003050010030502d'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> ferror_unlocked (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>


<span class='comment'>/* Print a message describing the meaning of the value of errno.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0030d0010030d024'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> perror (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__s)</span>;

<span class='comment'>/* Provide the declarations for `sys_errlist' and `sys_nerr' if they
   are available on this system.  Even if available, these variables
   should not be used directly.  The `strerror' function provides
   all the necessary functionality.  */</span>
<span class='directive'>#include <a class='include' href='../b2/5867ddc3014e6a.html'>&lt;bits/sys_errlist.h&gt;</a></span>


<span class='directive'>#ifdef	<a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0012c00a0012c016'>__USE_POSIX</a></span>
<span class='comment'>/* Return the system file descriptor for STREAM.  */</span>
<span class='decl decl-Function' id='003180010003d01b0031800100318024'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fileno (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif /* Use POSIX.  */</span>

<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017000a00170015'>__USE_MISC</a></span>
<span class='comment'>/* Faster version when locking is not required.  */</span>
<span class='decl decl-Function' id='0031d0010003d01b0031d0010031d02d'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> fileno_unlocked (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;
<span class='directive'>#endif</span>


<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0013000a00130017'>__USE_POSIX2</a></span>
<span class='comment'>/* Create a new stream connected to a pipe running the given command.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='003260010032603f'><span class='keyword extern'>extern</span> <a class='return-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE *</a>popen (<span class='keyword const'>const</span> <span class='keyword char'>char</span> *__command, <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__modes)</span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='comment'>/* Close a stream opened by popen and return the status of its child.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */</span>
<span class='decl decl-Function' id='0032c0010032c022'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> pclose (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream)</span>;
<span class='directive'>#endif</span>


<span class='directive'>#ifdef	<a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0012c00a0012c016'>__USE_POSIX</a></span>
<span class='comment'>/* Return the name of the controlling terminal.  */</span>
<span class='decl decl-Function' id='003320010003d01b0033200100332022'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *ctermid (<span class='keyword char'>char</span> *__s) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='directive'>#endif /* Use POSIX.  */</span>


<span class='directive'>#if (defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014a00a0014a016'>__USE_XOPEN</a> &amp;&amp; !defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015500c0015501a'>__USE_XOPEN2K</a>) || defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='comment'>/* Return the name of the current user.  */</span>
<span class='decl decl-Function' id='0033800100338020'><span class='keyword extern'>extern</span> <span class='keyword char'>char</span> *cuserid (<span class='keyword char'>char</span> *__s)</span>;
<span class='directive'>#endif /* Use X/Open, but not issue 6.  */</span>


<span class='directive'>#ifdef	<a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span>
<span class='decl decl-CXXRecord' id='0033d0010033d008'><span class='keyword struct'>struct</span> obstack</span>;			<span class='comment'>/* See &lt;obstack.h&gt;.  */</span>

<span class='comment'>/* Write formatted output to an obstack.  */</span>
<span class='decl decl-Function' id='003400010034203e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> obstack_printf (<a class='declaration-uses' href='../6f/078dbcc264af74.html#0033d0010033d008'><span class='keyword struct'>struct</span> obstack *</a>__restrict __obstack,
			   <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format, ...)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>2</span>, <span class='numeric'>3</span>)))</span>;
<span class='decl decl-Function' id='003430010034603e'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> obstack_vprintf (<a class='declaration-uses' href='../6f/078dbcc264af74.html#0033d0010033d008'><span class='keyword struct'>struct</span> obstack *</a>__restrict __obstack,
			    <span class='keyword const'>const</span> <span class='keyword char'>char</span> *__restrict __format,
			    __gnuc_va_list __args)
     <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003e00c0003e01d'>__THROWNL</a> <span class='keyword __attribute__'>__attribute__</span> ((__format__ (__printf__, <span class='numeric'>2</span>, <span class='numeric'>0</span>)))</span>;
<span class='directive'>#endif /* Use GNU.  */</span>


<span class='directive'>#ifdef <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0013800a0013801c'>__USE_POSIX199506</a></span>
<span class='comment'>/* These are defined in POSIX.1:1996.  */</span>

<span class='comment'>/* Acquire ownership of STREAM.  */</span>
<span class='decl decl-Function' id='0034e0010003d01b0034e0010034e028'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> flockfile (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;

<span class='comment'>/* Try to acquire ownership of STREAM but do not block if it is not
   possible.  */</span>
<span class='decl decl-Function' id='003520010003d01b003520010035202a'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> ftrylockfile (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span> <a class='MACRO-uses' href='../11/d2796f2851903a.html#0013600a0013600a'>__wur</a>;

<span class='comment'>/* Relinquish the ownership granted for STREAM.  */</span>
<span class='decl decl-Function' id='003550010003d01b003550010035502a'><span class='keyword extern'>extern</span> <span class='keyword void'>void</span> funlockfile (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *__stream) <a class='MACRO-uses' href='../11/d2796f2851903a.html#0003d00c0003d01b'>__THROW</a></span>;
<span class='directive'>#endif /* POSIX */</span>

<span class='directive'>#if defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0014a00a0014a016'>__USE_XOPEN</a> &amp;&amp; !defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0015500c0015501a'>__USE_XOPEN2K</a> &amp;&amp; !defined <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0017800a00178014'>__USE_GNU</a></span><span class='preprocessor-if muted'>
<span class='comment'>/*  X/Open Issues 1-5 required getopt to be declared in this
   header.  It was removed in Issue 6.  GNU follows Issue 6.  */</span>
<span class='directive'># include &lt;bits/getopt_posix.h&gt;</span></span>
<span class='directive'>#endif</span>

<span class='comment'>/* Slow-path routines used by the optimized inline functions in
   bits/stdio.h.  */</span>
<span class='decl decl-Function' id='003600010036001b'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __uflow (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *)</span>;
<span class='decl decl-Function' id='0036100100361023'><span class='keyword extern'>extern</span> <span class='keyword int'>int</span> __overflow (<a class='declaration-uses' href='../91/8bbaed7fe58735.html#0003100100063001'>FILE</a> *, <span class='keyword int'>int</span>)</span>;

<span class='comment'>/* If we are compiling with optimizing read this file.  It contains
   several optimizing inline functions and macros.  */</span>
<span class='directive'>#ifdef <span class='macro-undefined'>__USE_EXTERN_INLINES</span></span><span class='preprocessor-if muted'>
<span class='directive'># include &lt;bits/stdio.h&gt;</span></span>
<span class='directive'>#endif</span>
<span class='directive'>#if <a class='MACRO-uses' href='../08/80fafb6e566ce0.html#0018300a0018301e'>__USE_FORTIFY_LEVEL</a> &gt; 0 &amp;&amp; defined <a class='MACRO-uses' href='../11/d2796f2851903a.html#0016400a00164034'>__fortify_function</a></span><span class='preprocessor-if muted'>
<span class='directive'># include &lt;bits/stdio2.h&gt;</span></span>
<span class='directive'>#endif</span>
<span class='directive'>#ifdef <span class='macro-undefined'>__LDBL_COMPAT</span></span><span class='preprocessor-if muted'>
<span class='directive'># include &lt;bits/stdio-ldbl.h&gt;</span></span>
<span class='directive'>#endif</span>

<a class='MACRO-uses' href='../11/d2796f2851903a.html#0007300a00073016'>__END_DECLS</a>

<span class='directive'>#endif /* &lt;stdio.h&gt; included.  */</span>